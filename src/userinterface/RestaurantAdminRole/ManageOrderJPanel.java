/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Restaurant.Restaurant;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author namangupta
 */
public class ManageOrderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageOrderJPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecoSystem;
    Restaurant restaurant;
    UserAccount userAccount;
    
    public ManageOrderJPanel(JPanel userProcessContainer, EcoSystem ecoSystem,  Restaurant restaurant, UserAccount userAccount) {
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem = ecoSystem;
        this.restaurant = restaurant;
        this.userAccount = userAccount;
        initComponents();
        populateTable();
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)orderTable.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : restaurant.getUserAccount().getWorkQueue().getWorkRequestList()){
            if(request.getReceiver() == null){
                restaurant.getUserAccount().getWorkQueue().getWorkRequestList().remove(request);
                continue;
            }
            Object[] row = new Object[4];
            row[0] = request.getMessage();
            row[1] = request.getReceiver().getUsername();
            row[2] = request.getSender().getUsername();
            row[3] = request.getStatus();
            
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        btnAssignDeliveryMan = new javax.swing.JButton();
        lblAssign = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 255, 204));

        orderTable.setBackground(new java.awt.Color(255, 255, 204));
        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(orderTable);

        btnBack.setBackground(new java.awt.Color(255, 255, 204));
        btnBack.setText("<< BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        lblTitle.setText("MANAGE YOUR ORDERS HERE");

        btnAssignDeliveryMan.setBackground(new java.awt.Color(255, 255, 204));
        btnAssignDeliveryMan.setText("ASSIGN DELIVERY MAN");
        btnAssignDeliveryMan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignDeliveryManActionPerformed(evt);
            }
        });

        lblAssign.setText("ASSIGN A DELIVERY MAN ONCE THE ORDER IS READY TO DELIVER >>>>>>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnBack)
                        .addGap(210, 210, 210)
                        .addComponent(lblTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(lblAssign)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAssignDeliveryMan)))
                .addGap(194, 194, 194))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(lblTitle))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAssign, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAssignDeliveryMan))
                .addGap(263, 263, 263))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignDeliveryManActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignDeliveryManActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = orderTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to assign.");
            return;
        }
        
        Customer selectedCustomer = new Customer();
        
        String name = (String)orderTable.getValueAt(selectedRow, 2);
        
        for(Customer customer : ecoSystem.getCustomerDirectory().getCustomerDirectory()) {
            if(customer.getUserAccount()!=null){
               if(customer.getUserAccount().getUsername().equals(name) ) {
               selectedCustomer = customer;
               break;
           }
            }
            else{
               if(customer.getName().equals(name)) {
               selectedCustomer = customer;
               break;
           }
            }
       }
        String x = (String)orderTable.getValueAt(selectedRow, 3);
        if( !x.equals("Ordered")){
            JOptionPane.showMessageDialog(this, "This order is already assigned or delivered.");
            return;
        }
        
        AssignDeliveryJPanel back = new AssignDeliveryJPanel(userProcessContainer, this.ecoSystem, this.restaurant, selectedCustomer);
        userProcessContainer.add("WorkAreaJPanel", back);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer); 
    }//GEN-LAST:event_btnAssignDeliveryManActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        AdminWorkAreaJPanel back = new AdminWorkAreaJPanel(userProcessContainer, this.userAccount!=null?this.userAccount:this.restaurant.getUserAccount(),  this.ecoSystem);

        userProcessContainer.add("WorkAreaJPanel", back);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer); 
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignDeliveryMan;
    private javax.swing.JButton btnBack;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAssign;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable orderTable;
    // End of variables declaration//GEN-END:variables
}
