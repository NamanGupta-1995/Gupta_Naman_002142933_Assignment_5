/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.EcoSystem;
import Business.Restaurant.Restaurant;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.OrderRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author namangupta
 */
public class PlaceOrderByCustomerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PlaceOrderByCustomerJPanel
     */
    EcoSystem ecosystem;
    JPanel userProcessContainer;
    Restaurant restaurant;
    UserAccount account;
    ArrayList<String> order;
    Double total;
    
    public PlaceOrderByCustomerJPanel(JPanel userProcessContainer, EcoSystem ecosystem, Restaurant restaurant, UserAccount account) {
        this.ecosystem = ecosystem;
        this.userProcessContainer = userProcessContainer;
        this.restaurant = restaurant;
        this.account = account;
        this.order = new ArrayList<String>();
        initComponents();
        populateMenuTable(this.restaurant.getMenuList());
    }

    
    public void populateMenuTable(ArrayList<String> menu){
        DefaultTableModel model = (DefaultTableModel) tblMenu.getModel();
        model.setRowCount(0);
        if(menu != null){
            
        
        if(menu.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Please add food from table to order"
                    + "Restaurant", "Warning", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        for (String food : menu) {
            Object[] row = new Object[1];
            row[0] = food;
            model.addRow(row);
        
        }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMenu = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOrder = new javax.swing.JTable();
        btnAddToCart = new javax.swing.JButton();
        btnPlaceOrder = new javax.swing.JButton();
        txtOrderMessage = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 255, 204));

        lblTitle.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        lblTitle.setText("WELCOME TO THE RESTAURANT");

        tblMenu.setBackground(new java.awt.Color(255, 255, 204));
        tblMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Name"
            }
        ));
        jScrollPane1.setViewportView(tblMenu);

        btnBack.setBackground(new java.awt.Color(255, 255, 204));
        btnBack.setText("<< BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblOrder.setBackground(new java.awt.Color(255, 255, 204));
        tblOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "ITEM NAME"
            }
        ));
        jScrollPane2.setViewportView(tblOrder);

        btnAddToCart.setBackground(new java.awt.Color(255, 255, 204));
        btnAddToCart.setText("ADD TO CART");
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });

        btnPlaceOrder.setBackground(new java.awt.Color(255, 255, 204));
        btnPlaceOrder.setText("PLACE ORDER");
        btnPlaceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaceOrderActionPerformed(evt);
            }
        });

        txtOrderMessage.setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setText("PLEASE ADD SPECIAL INSTRUCTION FOR YOUR ORDER:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(227, 227, 227)
                        .addComponent(lblTitle)
                        .addGap(285, 285, 285))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 891, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtOrderMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(btnPlaceOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(395, 395, 395)
                .addComponent(btnAddToCart)
                .addGap(395, 395, 395))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle)
                    .addComponent(btnBack))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddToCart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPlaceOrder)
                    .addComponent(txtOrderMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(178, 178, 178))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CustomerAreaJPanel back = new CustomerAreaJPanel(userProcessContainer, this.account, this.ecosystem);

        userProcessContainer.add("WorkAreaJPanel", back);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblMenu.getSelectedRow();
        
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select an item to add.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblMenu.getModel();
        String selectedItem = (String) model.getValueAt(selectedRowIndex, 0);
        
        order.add(selectedItem);
        
        populateOrderTable(order);

    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void btnPlaceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaceOrderActionPerformed
        // TODO add your handling code here:
        OrderRequest request = new OrderRequest();
        String message = txtOrderMessage.getText();
        request.setMessage(message);
        request.setSender(account);
        request.setStatus("Ordered");
        request.setReceiver(restaurant.getUserAccount());

        account.getWorkQueue().getWorkRequestList().add(request);
        restaurant.getUserAccount().getWorkQueue().getWorkRequestList().add(request);
        JOptionPane.showMessageDialog(null, "Order Placed Successfully");
    }//GEN-LAST:event_btnPlaceOrderActionPerformed

    
    public void populateOrderTable(ArrayList<String> item){
        DefaultTableModel model = (DefaultTableModel) tblOrder.getModel();
        model.setRowCount(0);
        if(item != null){
            
        if(item.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Please add food from table to order"
                    + "Restaurant", "Warning", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        for (String food : item) {
            Object[] row = new Object[1];
            row[0] = food;
            model.addRow(row);
        }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnPlaceOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblMenu;
    private javax.swing.JTable tblOrder;
    private javax.swing.JTextField txtOrderMessage;
    // End of variables declaration//GEN-END:variables
}
